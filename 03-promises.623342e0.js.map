{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBA2BtC,SAASC,EAAcC,EAAUC,GAY/B,OAXAC,QAAU,IAAIC,SAAQ,CAACC,EAASC,KAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEJ,EAAUU,MAAAT,IAEpBI,EAAO,C,SAAEL,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAEJC,O,CAtCIL,SAASC,cAAc,SAC/Ba,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,MACEC,UAAYJ,MAAAK,EAAOC,KAAAC,EAAMC,OAAAC,IACvBP,EAAMQ,cAEV,IAAIC,EAAWC,OAAOP,EAAMQ,OACxBC,EAAUF,OAAOL,EAAKM,OACtBE,EAAYH,OAAOH,EAAOI,OAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAWC,GAAK,EACnC3B,EAAc2B,EAAGL,GACdM,MAAK,EAAC3B,SAAEA,EAAUU,MAAAkB,KACjBjC,EAAAkC,OAAOC,QAAQ,uBAAqB9B,QAAiB4B,SAAYG,OAElE,EAAO/B,WAAUU,MAAOsB,KACvBrC,EAAAkC,OAAMI,QAAC,sBAASjC,QAA8BgC,SAElDX,GAAYG,EAEdZ,EAAMQ,cAAcc,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst delay = document.querySelector('input[name = delay]');\nconst step = document.querySelector('input[name = step]');\nconst amount = document.querySelector('input[name = amount]');\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayNum = Number(delay.value);\n  let stepNum = Number(step.value);\n  let amountNum = Number(amount.value);\n\n  for (let i = 1; i <= amountNum; i += 1) {\n    createPromise(i, delayNum)\n      .then(({ position, delay }) =>\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n      )\n      .catch(({ position, delay }) =>\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    delayNum += stepNum;\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$iQIUW","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay4","promise","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","delay","addEventListener","event","preventDefault","elements","delay1","step","step1","amount","amount1","currentTarget","delayNum","Number","value","stepNum","amountNum","i","then","delay2","Notify","success","catch","delay3","failure","reset"],"version":3,"file":"03-promises.623342e0.js.map"}